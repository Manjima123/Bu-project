package com.handlerinfo.resource;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.client.RestTemplate;
import org.springframework.web.reactive.function.client.WebClient;

import com.handlerinfo.model.Train;
import com.handlerinfo.model.User;
import com.handlerinfo.service.UserServices;

@RestController
@RequestMapping("/user")
public class UserController {
//	@Autowired
//	private RestTemplate resttemplate;
	@Autowired
	private UserServices uservice;
	@Autowired
	private WebClient.Builder webClientBuilder;

	@PostMapping("/{i}")
	public User insertUser(@RequestBody User user) {

		Optional<User> op = uservice.findById(user.getId());
		if (op.isPresent()) {
			return user;
		} else {
			System.out.println("Data saved !!");
			User u = uservice.save(user);

			System.out.println(u);
			return u;
		}
	}

	@GetMapping("/ga/{id}")
	public User getAllUserDetailById(@PathVariable("id") int id) {
		Optional<User> op = uservice.findById(id);
		User t = op.get();
		if (op.isPresent()) {

			return t;
		} else {
			return null;
		}
	}

	@GetMapping("/g")
	public List<User> getAllUserDetails() {
		List<User> list = new ArrayList();
		uservice.findAllDetails().forEach(list::add);
		return list;
	}

	@DeleteMapping("/d/{id}")
	public ResponseEntity<String> deleteUserDetailsById(@PathVariable("id") int id) {
		Optional<User> op = uservice.findById(id);
		if (op.isPresent()) {
			User t = op.get();

			uservice.deleteById(id);
			return new ResponseEntity<String>("Deleted successfully", HttpStatus.OK);
		} else {
			return new ResponseEntity<String>("UserId not found", HttpStatus.NOT_FOUND);
		}

	}

	@GetMapping("/t")
	public List<Train> getTrainInfo() {
		List<Train> train = webClientBuilder.build().get().uri("http://localhost:8031/traindetails/g").retrieve()
				.bodyToMono(List.class).block();
//		List<Train> train = resttemplate.getForObject("http://localhost:8031/traindetails/g", List.class);
		return train;

	}
}