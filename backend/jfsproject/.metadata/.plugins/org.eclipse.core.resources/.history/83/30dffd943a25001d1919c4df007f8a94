package com.bookinginfoservice.resource;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.bookinginfoservice.model.Booking;
import com.bookinginfoservice.service.BookingService;



@RestController
@RequestMapping("/bookingdetails")
public class BookingController {
	

	@Autowired
	private BookingService bservice;
	@PostMapping("/{i}")
	public Booking insertBooking(@RequestBody Booking book){
		
		Optional<Booking> op = bservice.findById(book.getId());
		if(op.isPresent()) {
			return book;
		}
		else {
			System.out.println("Data saved !!");
			Booking b = bservice.save(book);
		
			System.out.println(b);
			return b;
		}
		
	}
	@GetMapping("/ga/{id}")
	public Booking getAllBookingDetailById(@PathVariable("id") int id){
		Optional<Booking> op=bservice.findById(id);
		Booking b=op.get();
		if(op.isPresent()) {
			
			return b;
		}
		else {
			return null;
		}
	}
	@GetMapping("/g")
	public List<Booking> getAllBookingDetails(){
		List<Booking> list = new ArrayList();
		bservice.findAllDetails().forEach(list::add);
		return list;	
	}
//	@PutMapping("/u/{id}")
//	public Booking UpdateBookingById(@PathVariable("id") String train_no, @RequestBody Booking book) {
//		Optional<Booking> op = bservice.findById(id);
//		if (op.isPresent()) {
//			Booking b = op.get();
//			t.setPrice(book.getPrice());
//			
//
//			tservice.save(t);
//			return t;
//		} else {
//			return null;
//		}
//	}
	@DeleteMapping("/d/{id}")
	public ResponseEntity<String> deleteBookingDetailsById(@PathVariable("id") int id){
		Optional<Booking> op = bservice.findById(id);
		if (op.isPresent()) {
			Booking b = op.get();
		
		bservice.deleteById(id);
		return new ResponseEntity<String>("Deleted successfully", HttpStatus.OK);
		}
		else {
			return new ResponseEntity<String>("Booking_id not found", HttpStatus.NOT_FOUND);
		}
	
	}

}