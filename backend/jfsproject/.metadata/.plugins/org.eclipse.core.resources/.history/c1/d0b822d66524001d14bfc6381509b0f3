package com.handlerinfo.resource;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;

import com.handlerinfo.model.Admin;
import com.handlerinfo.model.User;
import com.handlerinfo.service.AdminServices;

public class AdminController {
	
	private AdminServices adminservice;

	@PostMapping("/{i}")
	public 	Admin insertAdmin(@RequestBody Admin admin) {

		Optional<Admin> op = adminservice.findById(admin.getId());
		if (op.isPresent()) {
			return admin;
		} else {
			System.out.println("Data saved !!");
			Admin u = adminservice.save(admin);

			System.out.println(u);
			return u;
		}
	}
//	@GetMapping("/ga/{Admin_no}")
//	public Admin getAllAdminDetailById(@PathVariable("Admin_no") String Admin_no){
//		Optional<Admin> op=adminservice.findById(Admin_no);
//		Admin t=op.get();
//		if(op.isPresent()) {
//			
//			return t;
//		}
//		else {
//			return null;
//		}
//	}
//	@GetMapping("/g")
//	public List<Admin> getAllAdminDetails(){
//		List<Admin> list = new ArrayList();
//		adminservice.findAllDetails().forEach(list::add);
//		return list;	
//	}
	@PutMapping("/u/{id}")
	public Admin UpdateOrderById1(@PathVariable("id") int id, @RequestBody Admin admin) {
		Optional<Admin> op = adminservice.findById(id);
		if (op.isPresent()) {
			Admin a = op.get();
			a.setFname(admin.getFname());
			a.setLname(admin.getLname());
			a.setPassword(admin.getPassword());
			

			adminservice.save(a);
			return a;
		} else {
			return null;
		}
	}
//	@DeleteMapping("/d/{id}")
//	public ResponseEntity<String> deleteAdminDetailsById(@PathVariable("id") int id){
//		Optional<Admin> op = adminservice.findById(id);
//		if (op.isPresent()) {
//			Admin a = op.get();
//		
//		adminservice.deleteById(id);
//		return new ResponseEntity<String>("Deleted successfully", HttpStatus.OK);
//		}
//		else {
//			return new ResponseEntity<String>("Admin_no not found", HttpStatus.NOT_FOUND);
//		}
//	}

}
